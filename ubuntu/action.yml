name: "Actions-Cleaner"
description: "Clean all the things! Make more space on your runner. For real."
inputs:
  purge_docker:
    description: run docker purge to remove cached images
    default: true
  remove_browsers:
    description: remove Firefox and Google Chrome
    default: true
  remove_java:
    description: remove Java, openjdk, ant, etc.
    default: true
  remove_podman:
    description: remove Podman
    default: true
  remove_buildah:
    description: remove buildah
    default: true
  remove_dotnet:
    description: remove dotnet SDK
    default: true
  remove_erlang:
    description: remove erlang
    default: true
  remove_google_cloud_sdk:
    description: remove Google Cloud SDK
    default: true
  remove_mysql:
    description: remove mysql and mssql
    default: true
  remove_postgres:
    description: remove postgres*
    default: true
  remove_azure:
    description: remove linux-azure* libraries
    default: true
  remove_linux_cloud_tools:
    description: remove linux-cloud-tool* libraries
    default: true
  remove_apache:
    description: remove apache2
    default: true
  remove_nginx:
    description: remove nginx
    default: true
  remove_microsoft:
    description: remove Microsoft Package
    default: true
  remove_ruby:
    description: remove ruby
    default: true
  remove_powershell:
    description: remove powershell
    default: true
  remove_pollinate:
    description: remove pollinate
    default: true
  remove_php:
    description: remove php
    default: true
  remove_swig:
    description: remove swig
    default: true
  remove_swift:
    description: remove swift
    default: true
  remove_latex:
    description: remove latex
    default: true
  remove_awscli:
    description: remove AWS Cli
    default: true
  remove_maven:
    description: remove maven
    default: true
  remove_r:
    description: remove r
    default: true
  remove_editors:
    description: remove vim
    default: true
  remove_android:
    description: remove android SDK
    default: true
  remove_archives:
    description: remove scattered .tar.gz and .zip in opt and share
    default: true
  remove_ghc:
    description: remove ghc (Haskell Compiler)
    default: true
  remove_hhvm:
    description: remove hhvm "hack" virtual machine
    default: true
  remove_codeql:
    description: remove CodeQL
    default: true
  remove_go:
    description: remove go
    default: true
  remove_node:
    description: remove node
    default: true
  remove_pipx:
    description: remove pipx
    default: true
  remove_pypi:
    description: remove PyPi
    default: true
  remove_snap:
    description: remove snap
    default: true

outputs:
  pre-size:
    description: "size before clean"
    value: ${{ steps.pre.outputs.pre-size }}
  post-size:
    description: "size after clean"
    value: ${{ steps.post.outputs.post-size }}

runs:
  using: "composite"
  steps:
    - name: Pre-Size
      id: pre
      shell: bash
      run: |
         df -h    
         presize=$(df -h)
         echo "::set-output name=pre-size::${presize}"

    - name: Docker Purge
      if: ${{ inputs.purge_docker == 'true' }}
      shell: bash
      run: |
        printf "docker system prune --all --force\n"
        docker system prune --all --force

    - name: Remove Browsers
      if: ${{ inputs.remove_browsers == 'true' }}
      shell: bash
      run: |
        sudo apt-get remove -y firefox || echo "Firefox is not installed"
        sudo apt-get remove -y google-chrome-stable  || echo "Google Chrome is Not Installed"

    - name: Remove Java
      if: ${{ inputs.remove_java == 'true' }}
      shell: bash
      run: |
        sudo apt purge openjdk-* || echo "OpenJDK is not installed"
        sudo apt remove --autoremove openjdk-*  || echo "OpenJDK is not installed"
        sudo apt purge oracle-java* || echo "Oracle Java is not installed"
        sudo apt remove --autoremove adoptopenjdk-* || echo "Adopt open JDK is not installed"
        sudo apt-get remove -y ant || echo "ant is not installed"
        sudo rm -rf /opt/hostedtoolcache/Java_Adopt_jdk

    - name: Remove Podman
      if: ${{ inputs.remove_podman == 'true' }}
      shell: bash
      run: sudo apt-get remove -y podman || echo "Podman is not installed"

    - name: Remove Buildah
      if: ${{ inputs.remove_buildah == 'true' }}
      shell: bash
      run: sudo apt-get remove -y buildah || echo "Buidah is not installed"

    - name: Remove DotNet
      if: ${{ inputs.remove_dotnet == 'true' }}
      shell: bash
      run: |
        sudo apt-get remove -y dotnet-sdk* || echo "Dotnet SDK is is not installed"
        sudo rm -rf /usr/share/dotnet

    - name: Remove Erlang
      if: ${{ inputs.remove_erlang == 'true' }}
      shell: bash
      run: sudo apt-get remove -y esl-erlang || echo "erlang is not installed"

    - name: Remove Google Cloud SDK
      if: ${{ inputs.remove_google_cloud_sdk == 'true' }}
      shell: bash
      run: |
        sudo apt-get remove -y google-cloud-sdk || echo "Google Cloud SDK is not installed"
        sudo rm -rf /opt/google

    - name: Remove MySql
      if: ${{ inputs.remove_mysql == 'true' }}
      shell: bash
      run: sudo apt-get remove -y mssql* mysql*  || echo "mysql is not installed"

    - name: Remove Postgres
      if: ${{ inputs.remove_postgres == 'true' }}
      shell: bash
      run: sudo apt-get remove -y  postgresql* || echo "postgres* is not installed"

    - name: Remove Azure
      if: ${{ inputs.remove_azure == 'true' }}
      shell: bash
      run: |
        sudo apt-get remove -y linux-azure*  || echo "linux-azure* is not installed"
        sudo apt-get remove -y azure-cli || echo "Azure CLI is not installed"
        sudo rm -rf /opt/az
        sudo rm -rf /usr/share/az*

    - name: Remove Linux Cloud Tools
      if: ${{ inputs.remove_linux_cloud_tools == 'true' }}
      shell: bash
      run: sudo apt-get remove -y linux-cloud-tools-* || echo "Linux cloud tools are not installed"

    - name: Remove Nginx
      if: ${{ inputs.remove_nginx == 'true' }}
      shell: bash
      run: sudo apt-get remove -y nginx || echo "Nginx is not installed"

    - name: Remove Apache
      if: ${{ inputs.remove_apache == 'true' }}
      shell: bash
      run: sudo apt-get remove -y apache2 || echo "apache is not installed"

    - name: Remove Microsoft Package
      if: ${{ inputs.remove_microsoft == 'true' }}
      shell: bash
      run: |
        sudo apt-get remove -y packages-microsoft-prod || echo "packages-microsoft-prod is not installed"
        sudo rm -rf /opt/microsoft

    - name: Remove Php
      if: ${{ inputs.remove_php == 'true' }}
      shell: bash
      run: sudo apt-get remove -y php || echo "php is not installed"

    - name: Remove Pollinate
      if: ${{ inputs.remove_pollinate == 'true' }}
      shell: bash
      run: sudo apt-get remove -y pollinate || echo "pollinate is not installed"

    - name: Remove Powershell
      if: ${{ inputs.remove_powershell == 'true' }}
      shell: bash
      run: sudo apt-get remove -y powershell || echo "powershell is not installed"

    - name: Remove Ruby
      if: ${{ inputs.remove_ruby == 'true' }}
      shell: bash
      run: |
        sudo apt-get remove -y ruby-full || echo "ruby is not installed"
        rm -rf /opt/hostedtoolcache/Ruby

    - name: Remove Swift
      if: ${{ inputs.remove_swift == 'true' }}
      shell: bash
      run: sudo apt-get remove -y swift || echo "swift is not installed"

    - name: Remove Swig
      if: ${{ inputs.remove_swig == 'true' }}
      shell: bash
      run: sudo apt-get remove -y swig || echo "swig is not installed"

    - name: Remove LaTeX
      if: ${{ inputs.remove_latex == 'true' }}
      shell: bash
      run: |
        sudo apt-get remove -y texinfo || echo "texinfo is not installed"
        sudo apt-get remove -y texlive || echo "texlive is not installed"

    - name: Remove Mercurial
      if: ${{ inputs.remove_mercurial == 'true' }}
      shell: bash
      run: sudo apt-get remove -y mercurial || echo "mercurial is not installed"

    - name: Remove AWS Client
      if: ${{ inputs.remove_awscli == 'true' }}
      shell: bash
      run: sudo rm -rf /usr/local/aws-cli

    - name: Remove Maven
      if: ${{ inputs.remove_maven == 'true' }}
      shell: bash
      run: sudo apt-get remove -y maven || echo "maven is not installed"

    - name: Remove R
      if: ${{ inputs.remove_r == 'true' }}
      shell: bash
      run: |
        sudo apt-get remove -y r-base-core r-base || echo "R is not installed"
        sudo rm -rf /opt/R
        sudo rm -rf /usr/share/R
  
    - name: Remove Editors
      if: ${{ inputs.remove_vim == 'true' }}
      shell: bash
      run: sudo apt-get remove -y r-base-core r-base || echo "R is not installed"

    - name: Remove Archives
      if: ${{ inputs.remove_archives == 'true' }}
      shell: bash
      run: |
        sudo rm -rf /opt/*.zip
        sudo rm -rf /opt/*.tar.gz
        sudo rm -rf /usr/share/*.zip
        sudo rm -rf /usr/share/*.tar.gz

    - name: Remove Android
      if: ${{ inputs.remove_android == 'true' }}
      shell: bash
      run: sudo rm -rf /usr/local/lib/android

    - name: Remove GHC
      if: ${{ inputs.remove_ghc == 'true' }}
      shell: bash
      run: sudo rm -rf /opt/ghc

    - name: Remove HHVM
      if: ${{ inputs.remove_hhvm == 'true' }}
      shell: bash
      run: sudo rm -rf /opt/hhvm

    - name: Remove CodeQL
      if: ${{ inputs.remove_codeql == 'true' }}
      shell: bash
      run: sudo rm -rf /opt/hostedtoolcache/CodeQL

    - name: Remove Go
      if: ${{ inputs.remove_go == 'true' }}
      shell: bash
      run: sudo rm -rf /opt/hostedtoolcache/go

    - name: Remove Node
      if: ${{ inputs.remove_node == 'true' }}
      shell: bash
      run: sudo rm -rf /opt/hostedtoolcache/node

    - name: Remove Pipx
      if: ${{ inputs.remove_pipx == 'true' }}
      shell: bash
      run: |
        sudo rm -rf /opt/hostedtoolcache/pipx
        sudo rm -rf /opt/hostedtoolcache/pipx_bin
        sudo rm -rf /opt/pipx
        sudo rm -rf /opt/pipx_bin

    - name: Remove PyPi
      if: ${{ inputs.remove_pypi == 'true' }}
      shell: bash
      run: sudo rm -rf /opt/hostedtoolcache/PyPi

    - name: Remove snap
      if: ${{ inputs.remove_snap == 'true' }}
      shell: bash
      run: |
        sudo rm -rf /var/cache/snapd/
        sudo apt autoremove --purge snapd gnome-software-plugin-snap
        sudo rm -rf ~/snap
        sudo apt-mark hold snapd

    - name: List APT Packages Installed
      shell: bash
      run: |
        comm -23 <(apt-mark showmanual | sort -u) <(gzip -dc /var/log/installer/initial-status.gz | sed -n 's/^Package: //p' | sort -u)

    - name: Run AutoRemove
      shell: bash
      run: sudo apt-get autoremove

    - name: List What's Left
      shell: bash
      run: tree --du -L 2 /

    - name: Post-Size
      id: post
      shell: bash
      run: |
         df -h    
         postsize=$(df -h)
         echo "::set-output name=post-size::${postsize}"
